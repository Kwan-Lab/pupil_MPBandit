function plot_switch_random(input,tlabel,rule_labels)
% % plot_switch_random %
%PURPOSE:   Plot choice behavior around switches, as a function of
%           statistics of the block preceding the switch
%AUTHORS:   AC Kwan 170518
%
%INPUT ARGUMENTS
%   input:  Structure generated by choice_switch_random().
%   tlabel: Text string that will be put on top of the figure
%   rule_labels:    Text strings for the legend in figure
%

%%
if numel(input)>1  %more than 1 data set, plot mean+-sem
    n=input{1}.n;
    numtransType=input{1}.numtransType;
    transType=input{1}.transType;
    numRange=input{1}.numRange;
    L1_ranges=input{1}.L1_ranges;
    L2_ranges=input{1}.L2_ranges;
    for j=1:numel(input)
        temp_probl(:,:,:,j)=input{j}.probl;
        temp_probr(:,:,:,j)=input{j}.probr;
        temp_probn(:,:,:,j)=input{j}.probneither;
    end
    probl=nanmean(temp_probl,4);
    probr=nanmean(temp_probr,4);
    probn=nanmean(temp_probn,4);
    probl_sem=nanstd(temp_probl,[],4)./sqrt(numel(input));
    probr_sem=nanstd(temp_probr,[],4)./sqrt(numel(input));
    probn_sem=nanstd(temp_probn,[],4)./sqrt(numel(input));
else                %plot the 1 data set
    n=input.n;
    probl=input.probl;
    probr=input.probr;
    probn=input.probneither;
    numtransType=input.numtransType;
    transType=input.transType;
    numRange=input.numRange;
    L1_ranges=input.L1_ranges;
    L2_ranges=input.L2_ranges;
end

figure;

for j=1:numtransType

    legendNum = 1;

    subplot(1,numtransType,j); hold on;
    
    %plot dotted line at trial = 0
    plot([0 0],[0 1],'k--','LineWidth',2);

    %plot probability of going left
    for k=1:numRange
        %plot the mean
        h(legendNum) = plot(n,probl(:,j,k),'.-','MarkerSize',30,'Linewidth',3,'Color',[1 k/(numRange+1) 0]);
        %if more than 1 data set, then plot the error bars
        if numel(input)>1
            for l=1:numel(n)
                plot(n(l)*[1 1],probl(l,j,k)+probl_sem(l,j,k)*[-1 1],'-','LineWidth',3,'Color',[1 k/(numRange+1) 0]);
            end
        end
        
        legstring{legendNum}=['Left (L_1: ' int2str(L1_ranges(k,1)) '-' int2str(L1_ranges(k,2)) '; L_2: ' int2str(L2_ranges(k,1)) '-' int2str(L2_ranges(k,2)) ')'];
        legendNum = legendNum + 1;
        
    end
    
    %plot probability of going right
    for k=1:numRange
        %plot the mean
        h(legendNum) = plot(n,probr(:,j,k),'.-','MarkerSize',30,'Linewidth',3,'Color',[0 k/(numRange+1) 1]);
        %if more than 1 data set, then plot the error bars
        if numel(input)>1
            for l=1:numel(n)
                plot(n(l)*[1 1],probr(l,j,k)+probr_sem(l,j,k)*[-1 1],'-','LineWidth',3,'Color',[0 k/(numRange+1) 1]);
            end
        end
                
        legstring{legendNum}=['Right (L_1: ' int2str(L1_ranges(k,1)) '-' int2str(L1_ranges(k,2)) '; L_2: ' int2str(L2_ranges(k,1)) '-' int2str(L2_ranges(k,2)) ')'];
        legendNum = legendNum + 1;
        
    end
    
   %plot probability of miss
   for k=1:numRange
        %plot the mean
        h(legendNum) = plot(n,probn(:,j,k),'.-','MarkerSize',30,'Linewidth',3,'Color',k/(numRange+1)*[1 1 1]);
        %if more than 1 data set, then plot the error bars
        if numel(input)>1
            for l=1:numel(n)
                plot(n(l)*[1 1],probn(l,j,k)+probn_sem(l,j,k)*[-1 1],'-','LineWidth',3,'Color',k/(numRange+1)*[1 1 1]);
            end
        end
             
        legstring{legendNum}=['Miss (L_1: ' int2str(L1_ranges(k,1)) '-' int2str(L1_ranges(k,2)) '; L_2: ' int2str(L2_ranges(k,1)) '-' int2str(L2_ranges(k,2)) ')'];
        legendNum = legendNum + 1;
                
    end
        
    legend(h,legstring);
    legend box off;
    ylabel('Fraction of trials');    
    xlabel('Trial from block switch');
    axis([n(1) n(end) 0 1]);
    title([rule_labels{transType(j,1)} ' to ' rule_labels{transType(j,2)}]);
    
    clear legstring h;

end

end


